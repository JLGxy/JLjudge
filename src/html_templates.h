#include <string_view>

#include "config.h"

namespace jlgxy {

constexpr std::string_view _contest_config_template =
        R"qwq(# This file is generated by jljudge )qwq" JLGXY_VERSION R"qwq(

problems: []

compilers:
  -
    name: gcc-c11
    path: /usr/bin/gcc
    args: ["${source}", "-o", "${executable}", "-static", "-std=c11", "-O2"]
    suffixes: [".c"]
  -
    name: gcc-c++14
    path: /usr/bin/g++
    args: ["${source}", "-o", "${executable}", "-static", "-std=c++14", "-O2"]
    suffixes: [".cpp"]
)qwq";

constexpr std::string_view _problem_config_template =
        R"qwq(# This file is generated by jljudge )qwq" JLGXY_VERSION R"qwq(

name: {0}
type: traditional
compilers:
  - gcc-c++14
input_file: {0}.in
output_file: {0}.out
checker: my_checker
checker_compiler: gcc-c++14
# interactor: interactor
# interactor_compiler: gcc-c++14

testcases:
  -
    time_limit: 1000
    memory_limit: 524288
    input_file: {0}1.in
    answer_file: {0}1.ans

has_subtasks: true
subtasks:
  -
    scoring: avg
    score: 100
    testcases: [1]
)qwq";

constexpr std::string_view _problem_checker_template =
        R"qwq(// This file is generated by jljudge )qwq" JLGXY_VERSION R"qwq(

int main(int argc, char **argv) {{
  // Your code here.
}}
)qwq";

constexpr std::string_view _html_template_submission_detail = R"qwq(
    <div style="width:45em; margin-bottom:2em">
      <div class="grid4-container">
        <div class="grid4-item bb">题目</div>
        <div class="grid4-item">{}</div>
        <div class="grid4-item bb">选手</div>
        <div class="grid4-item">{}</div>
        <div class="grid4-item bb">评测结果</div>
        <div class="grid4-item">
          <div class="status-label" style="background-color: var(--{}-color)"></div>
          <span>{}</span>
        </div>
        <div class="grid4-item bb">总分</div>
        <div class="grid4-item">{}</div>
        <div class="grid4-item bb">时间</div>
        <div class="grid4-item">{}</div>
        <div class="grid4-item bb">空间</div>
        <div class="grid4-item">{}</div>
        <div class="grid4-item bb">语言</div>
        <div class="grid4-item">{}</div>
        <div class="grid4-item bb">代码长度</div>
        <div class="grid4-item">{}</div>
        <div class="grid4-item bb">评测时间</div>
        <div class="grid4-item">{}</div>
      </div>
    </div>
)qwq";

constexpr std::string_view _html_template_testcases_head = R"qwq(
    <div style="width:36em; margin-bottom:2em">
      <div class="grid2-container">
        <div class="grid2-row">
          <div class="grid2-item bb">编号</div>
          <div class="grid2-item bb">评测结果</div>
          <div class="grid2-item bb">时间</div>
          <div class="grid2-item bb">空间</div>
          <div class="grid2-item bb">得分</div>
        </div>
)qwq";
constexpr std::string_view _html_template_testcases_body = R"qwq(
        <div class="grid2-row grid2-111 grid-111">
          <div class="grid2-item">{}</div>
          <div class="grid2-item">
            <div class="status-label" style="background-color: var(--{}-color)"></div>
            <span id="{}" class="clk1">{}</span>
          </div>
          <div class="grid2-item">{}</div>
          <div class="grid2-item">{}</div>
          <div class="grid2-item">{}%</div>
        </div>
)qwq";
constexpr std::string_view _html_template_testcases_tail = "      </div>\n    </div>\n";

constexpr std::string_view _html_template_subtask_head = R"qwq(
    <div style="width:40em; margin-bottom:2em">
      <div class="grid3-container">
        <div class="grid3-row">
          <div class="grid3-item bb">编号</div>
          <div class="grid3-item bb">测试点</div>
          <div class="grid3-item bb">最大时间</div>
          <div class="grid3-item bb">最大空间</div>
          <div class="grid3-item bb">得分</div>
        </div>
)qwq";
constexpr std::string_view _html_template_subtasks_body = R"qwq(
      <div class="grid3-row grid-111">
        <div class="grid3-item">{}</div>
        <div class="grid3-item">{}</div>
        <div class="grid3-item">{}</div>
        <div class="grid3-item">{}</div>
        <div class="grid3-item">{}</div>
      </div>
)qwq";
constexpr std::string_view _html_template_subtasks_tail = "      </div>\n    </div>\n";

constexpr std::string_view _html_template_begin = R"qwq(<!DOCTYPE html>
<html lang="zh-cn">
  <head>
    <title>ac</title>
    <style>
      @font-face {{
        font-family: geist;
        src: url("Geist-SemiBold.otf");
        font-weight: 700;
      }}
      @font-face {{
        font-family: 'geist', sans-serif;
        src: url("Geist-Medium.otf");
        font-weight: 600;
      }}
      @font-face {{
        font-family: geist;
        src: url("Geist-Regular.otf");
        font-weight: 500;
      }}
      @font-face {{
        font-family: geist;
        src: url("Geist-Light.otf");
        font-weight: 400;
      }}
      html {{
        font-family: geist;
        font-weight: 400;
        --_ac-color: rgb(37, 173, 64);
        --_wa-color: rgb(238, 77, 60);
        --_failed-color: rgb(14, 29, 105);
        --_undefined-color: rgb(13, 21, 68);
        --_ce-color: rgb(243, 156, 17);
        --_re-color: rgb(157, 61, 207);
        --_tle-color: rgb(20, 160, 183);
        --_mle-color: rgb(16, 191, 175);
        --_pe-color: rgb(255, 15, 138);
        --_ole-color: rgb(76, 96, 134);
      }}
      .grid-container {{
        display: grid;
        grid-template-columns: {};
        background-color: #fff;
        row-gap: 1px;
        column-gap: 0px;
        padding: 1px;
      }}
      .grid-item {{
        background-color: #fff;
        padding: 0.125em;
        text-align: center;
        line-height: 2;
        color: rgba(0, 0, 0, 0.8);
        border-bottom: solid 1px rgba(0, 0, 0, 0.4);
        font-weight: 500;
      }}
      .grid2-container {{
        display: grid;
        grid-template-columns: 1fr;
        background-color: #fff;
        row-gap: 1px;
        column-gap: 1px;
        padding: 1px;
      }}
      .grid2-item {{
        background-color: #fff;
        padding: 0.125em;
        text-align: center;
      }}
      .status-label {{
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 5px;
        margin-right: .25em;
      }}
      .grid3-container {{
        display: grid;
        grid-template-columns: 1fr;
        background-color: #fff;
        row-gap: 1px;
        column-gap: 1px;
        padding: 1px;
      }}
      .grid3-item {{
        background-color: #fff;
        padding: 0.125em;
        text-align: center;
      }}
      .bb {{
        font-weight: 600;
        color: #000;
      }}
      .clk {{
        cursor: pointer;
        color: inherit;
        text-decoration: none;
      }}
      .clk:hover {{
        color: #027;
      }}
      .clk1 {{
        cursor: pointer;
        text-decoration: none;
        font-weight: 500;
      }}
      .grid-111 {{
        color: oklch(.141 .005 285.823);
        font-size: 14px;
      }}
      .grid2-row {{
        display: grid;
        grid-template-columns: 2fr 4fr 2fr 2.5fr 2fr;
        background-color: #fff;
        row-gap: 1px;
        column-gap: 1px;
        line-height: 1.75;
      }}
      .grid3-row {{
        display: grid;
        grid-template-columns: 2fr 2fr 2.5fr 3fr 3fr;
        background-color: #fff;
        row-gap: 1px;
        column-gap: 1px;
        line-height: 1.75;
      }}
      .grid4-container {{
        font-size: .875em;
        display: grid;
        grid-template-columns: 1fr 2fr 1fr 2fr 1fr 2fr;
        background-color: #fff;
        row-gap: 1px;
        column-gap: 0px;
        padding: 1px;
      }}
      .grid4-item {{
        background-color: #fff;
        padding: 0.125em;
        text-align: center;
        line-height: 2;
        color: rgba(0, 0, 0, 0.8);
        /* border-bottom: solid 1px rgba(0, 0, 0, 0.4); */
        font-weight: 500;
      }}
      .grid4-item:nth-child(2n+1) {{
        text-align: right;
        font-weight: 500;
      }}
      .grid4-item:nth-child(2n) {{
        text-align: left;
        margin: 0 1em;
      }}
    </style>
    <script>
      window.onload = ()=>{{
        /*
        let rw = document.getElementsByClassName("grid2-_ac");
        for (let i = 0; i < rw.length; i++) {{
          rw[i].onmouseover = (e)=>{{
            e.currentTarget.children[1].children[0].style.color = "";
          }};
        }}
        */
      }};
    </script>
  </head>
  <body>
)qwq";
constexpr std::string_view _html_template_end = "  </body>\n</html>\n";

constexpr std::string_view _stat_template_begin = R"qwq(<!DOCTYPE html>
<html>
  <head>
    <title>ac</title>
    <style>
      @font-face {
        font-family: geist;
        src: url("Geist-SemiBold.otf");
        font-weight: 700;
      }
      @font-face {
        font-family: 'geist', sans-serif;
        src: url("Geist-Medium.otf");
        font-weight: 600;
      }
      @font-face {
        font-family: geist;
        src: url("Geist-Regular.otf");
        font-weight: 500;
      }
      @font-face {
        font-family: geist;
        src: url("Geist-Light.otf");
        font-weight: 400;
      }
      html {
        font-family: geist;
        font-weight: 400;
        --_ac-color: rgb(37, 173, 64);
        --_wa-color: rgb(238, 77, 60);
        --_failed-color: rgb(14, 29, 105);
        --_undefined-color: rgb(13, 21, 68);
        --_ce-color: rgb(243, 156, 17);
        --_re-color: rgb(157, 61, 207);
        --_tle-color: rgb(20, 160, 183);
        --_mle-color: rgb(16, 191, 175);
        --_pe-color: rgb(255, 15, 138);
        --_ole-color: rgb(76, 96, 134);
      }
      .status-label {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 5px;
        margin-right: .25em;
      }
      .bb {
        font-weight: 600;
        color: #000;
      }
      .clk {
        cursor: pointer;
        color: inherit;
        text-decoration: none;
      }
      .clk:hover {
        color: #027;
      }
      .clk1 {
        cursor: pointer;
        text-decoration: none;
        font-weight: 500;
      }
      .grid6-container {
        display: grid;
        grid-template-columns: 1.25fr 1.5fr 1fr 1fr 1fr 1.25fr 1fr;
        background-color: #fff;
        row-gap: 1px;
        column-gap: 0px;
        padding: 1px;
      }
      .grid-item {
        background-color: #fff;
        padding: 0.125em;
        text-align: center;
        line-height: 2;
        color: rgba(0, 0, 0, 0.8);
        border-bottom: solid 1px rgba(0, 0, 0, 0.4);
        font-weight: 500;
      }
    </style>
  </head>
  <body>)qwq";

constexpr std::string_view _stat_template_problem_head = R"qwq(
    <div style="width:54em; margin-bottom:2em">
      <div class="grid6-container">
        <div class="grid-item bb">选手</div>
        <div class="grid-item bb">题目</div>
        <div class="grid-item bb">评测结果</div>
        <div class="grid-item bb">时间</div>
        <div class="grid-item bb">空间</div>
        <div class="grid-item bb">语言</div>
        <div class="grid-item bb">代码长度</div>)qwq";
constexpr std::string_view _stat_template_problem_body = R"qwq(
        <div class="grid-item">{}</div>
        <div class="grid-item">{}</div>
        <div class="grid-item">
          <div class="status-label" style="background-color: var(--{}-color)"></div>
          <span>{}</span>
        </div>
        <div class="grid-item">{}</div>
        <div class="grid-item">{}</div>
        <div class="grid-item">{}</div>
        <div class="grid-item">{}</div>)qwq";
constexpr std::string_view _stat_template_problem_tail = "      </div>    </div>";
constexpr std::string_view _stat_template_end = "  </body>\n</html>\n";

}  // namespace jlgxy
